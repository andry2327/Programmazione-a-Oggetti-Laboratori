package diet;

import java.util.Collection;
import java.util.TreeSet;


/**
 * Facade class for the diet management.
 * It allows defining and retrieving raw materials and products.
 *
 */
public class Food {
	
	
	Collection<RawMaterial> rawMaterials = new TreeSet<RawMaterial> ();
	Collection<Product> products = new TreeSet<Product> ();
			
	public void defineRawMaterial(String name, double calories, double proteins, double carbs, double fat){
		
		rawMaterials.add(new RawMaterial(name, calories, proteins, carbs, fat));
	}
	
	public Collection<NutritionalElement> rawMaterials(){
		
		Collection<NutritionalElement> tmp = new TreeSet<>(rawMaterials);
		return tmp;
	}
	
	public NutritionalElement getRawMaterial(String name){
		
		for(RawMaterial rm: rawMaterials) {
			
			if(rm.getName().compareTo(name)==0)
				return rm;
		}
		return null;
	}

	public void defineProduct(String name,  double calories, double proteins, double carbs, double fat){
		
		products.add(new Product(name, calories, proteins, carbs, fat));
	}
	
	public Collection<NutritionalElement> products(){
		
		Collection<NutritionalElement> tmp = new TreeSet<>(products);
		return tmp;
	}
	
	public NutritionalElement getProduct(String name){
		
		for(Product p: products) {
			
			if(p.getName().compareTo(name)==0)
				return p;
		}
		return null;
	}
	
	/**
	 * Creates a new recipe stored in this Food container.
	 *  
	 * @param name name of the recipe
	 * 
	 * @return the newly created Recipe object
	 */
	public Recipe createRecipe(String name) {
		return null;
	}
	
	/**
	 * Retrieves the collection of all defined recipes
	 * 
	 * @return collection of recipes though the {@link NutritionalElement} interface
	 */
	public Collection<NutritionalElement> recipes(){
		return null;
	}
	
	/**
	 * Retrieves a specific recipe, given its name
	 * 
	 * @param name  name of the recipe
	 * 
	 * @return  a recipe though the {@link NutritionalElement} interface
	 */
	public NutritionalElement getRecipe(String name){		
		return null;
	}
	
	/**
	 * Creates a new menu
	 * 
	 * @param name name of the menu
	 * 
	 * @return the newly created menu
	 */
	public Menu createMenu(String name) {
		return null;
	}
	
}
